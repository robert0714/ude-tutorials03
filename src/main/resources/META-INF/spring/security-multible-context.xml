<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:s="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<s:http>
		<s:csrf disabled="true" />
		<s:intercept-url pattern="/secure/extreme/**" access="hasRole('ROLE_SUPERVISOR')"/>
		<s:intercept-url pattern="/secure/**" access="authenticated" />
		<s:intercept-url pattern="/**" access="permitAll" />
		<s:intercept-url pattern='/WEB-INF' access='permitAll' /> 
		
		<s:form-login login-page="/contacts"
		    username-parameter="j_username" 
			password-parameter="j_password"  
			authentication-failure-url="/security/loginfail"
			login-processing-url="/j_spring_security_check"			
			default-target-url="/contacts"/>
		<s:anonymous />
		<s:logout logout-success-url="/contacts" />
	</s:http>
	
	
	<!-- traditional spring configuration --> 

	<bean id="org.springframework.security.authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<constructor-arg>
			<list>

				<ref bean="daoAuthenticationProvider" /> 
				<ref bean="daoAuthenticationProvider2" />
				<ref bean="ldapAuthenticationProvider" />
			</list>
		</constructor-arg>
	</bean>
	 


    <bean id="ldapServer"
            class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
		<constructor-arg value="ldap://192.168.2.12:389"/> 
        <property name="userDn" value="iisildap@iead.local"  />
      	<property name="password" value="iisi@1qaz2wsx"  />
      	<!-- Due to security .... password need to .... -->
    </bean>

    <bean id="ldapAuthenticationProvider"
            class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
        <constructor-arg ref="ldapBindAuthenticator"/>
        <constructor-arg ref="ldapAuthoritiesPopulator"/>
    </bean>

    <bean id="ldapBindAuthenticator"
            class="org.springframework.security.ldap.authentication.BindAuthenticator">
        <constructor-arg ref="ldapServer"/>
        <property name="userSearch" ref="ldapSearch"/>
    </bean> 
    <bean id="ldapSearch"
            class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
        <constructor-arg value="OU=IE,DC=iead,DC=local"/> <!-- use-search-base -->
        <constructor-arg value="(sAMAccountName={0})"/> <!-- user-search-filter -->
        <constructor-arg ref="ldapServer"/>
    </bean>

    <bean id="ldapAuthoritiesPopulator"
            class="com.packtpub.springsecurity.ldap.userdetails.ad.ActiveDirectoryLdapAuthoritiesPopulator"/>
            
    <bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
	</bean>
	<bean id="daoAuthenticationProvider2"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="inMemoryDaoImpl" />
	</bean>	
    <bean id="userDetailsService"
			class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<bean id = "inMemoryDaoImpl"  
	class = "org.springframework.security.provisioning.InMemoryUserDetailsManager" >  
        <constructor-arg  >             
            <value>
					user=password,ROLE_USER
			</value>
        </constructor-arg >  
    </bean > 
    

</beans>
